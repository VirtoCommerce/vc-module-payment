// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VirtoCommerce.PaymentModule.Data.Repositories;

#nullable disable

namespace VirtoCommerce.PaymentModule.Data.PostgreSql.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    partial class PaymentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VirtoCommerce.PaymentModule.Data.Model.PaymentMethodLocalizedNameEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("ParentEntityId")
                        .IsRequired()
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentEntityId");

                    b.HasIndex("LanguageCode", "ParentEntityId")
                        .IsUnique()
                        .HasDatabaseName("IX_PaymentMethodLocalizedName_LanguageCode_ParentEntityId");

                    b.ToTable("PaymentMethodLocalizedName", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.PaymentModule.Data.Model.StorePaymentMethodEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<bool>("AllowDeferredPayment")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAvailableForPartial")
                        .HasColumnType("boolean");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("StoreId")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("TypeName")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName", "StoreId")
                        .IsUnique()
                        .HasDatabaseName("IX_StorePaymentMethodEntity_TypeName_StoreId");

                    b.ToTable("StorePaymentMethod", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.PaymentModule.Data.Model.PaymentMethodLocalizedNameEntity", b =>
                {
                    b.HasOne("VirtoCommerce.PaymentModule.Data.Model.StorePaymentMethodEntity", "ParentEntity")
                        .WithMany("LocalizedNames")
                        .HasForeignKey("ParentEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentEntity");
                });

            modelBuilder.Entity("VirtoCommerce.PaymentModule.Data.Model.StorePaymentMethodEntity", b =>
                {
                    b.Navigation("LocalizedNames");
                });
#pragma warning restore 612, 618
        }
    }
}
